sh_test(
    name = "shfmt-lint",
    size = "small",
    srcs = ["shfmt-lint.sh"],
    data = [
        "//:WORKSPACE.bazel",
    ],
    env = {
        # Hack to escape the sandbox and grep on the actual repository
        "WORKSPACE": "$(rootpath //:WORKSPACE.bazel)",
    },
    tags = [
        "external",  # force test to be unconditionally executed.
        "local",  # precludes the action or test from being remotely cached, remotely executed, or run inside the sandbox.
        "smoke",  # it should be run before committing code changes into the version control system.
    ],
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "shfmt-format",
    srcs = ["shfmt-format.sh"],
    data = [
        "//:WORKSPACE.bazel",
    ],
    env = {
        # Hack to escape the sandbox and grep on the actual repository
        "WORKSPACE": "$(rootpath //:WORKSPACE.bazel)",
    },
    tags = [
        "local",  # precludes the action or test from being remotely cached, remotely executed, or run inside the sandbox.
        "smoke",  # it should be run before committing code changes into the version control system.
    ],
    visibility = ["//visibility:public"],
)
