{
  "dfx": "0.16.1",
  "canisters": {
    "water_neuron": {
      "candid": "water_neuron/water_neuron.did",
      "type": "custom",
      "build": "sh -c 'bazel build //water_neuron:canister'",
      "wasm": "bazel-bin/water_neuron/canister.wasm"
    },
    "boomerang": {
      "candid": "boomerang/boomerang.did",
      "type": "custom",
      "build": "sh -c 'bazel build //boomerang:canister'",
      "wasm": "bazel-bin/boomerang/canister.wasm"
    },
    "wtn_governance": {
      "type": "custom",
      "build": "sh -c 'bazel build @sns-governance-canister//:sns-governance-canister.wasm.gz && bazel build @sns-governance-candid//:governance.did && mkdir -p canisters candid && cp $(bazel info output_base)/external/sns-governance-canister/sns-governance-canister.wasm.gz canisters/ && cp $(bazel info output_base)/external/sns-governance-candid/governance.did candid/'",
      "candid": "candid/governance.did",
      "wasm": "canisters/sns-governance-canister.wasm.gz"
    },
    "wtn_ledger": {
      "type": "custom",
      "build": "sh -c 'bazel build @ic-icrc1-ledger-canister//:ic-icrc1-ledger.wasm.gz && bazel build @ic-icrc1-ledger-candid//:ledger.did && mkdir -p canisters candid && cp $(bazel info output_base)/external/ic-icrc1-ledger-canister/ic-icrc1-ledger.wasm.gz canisters/ && cp $(bazel info output_base)/external/ic-icrc1-ledger-candid/ledger.did candid/'",
      "candid": "candid/ledger.did",
      "wasm": "canisters/ic-icrc1-ledger.wasm.gz"
    },
    "nicp_ledger": {
      "type": "custom",
      "build": "sh -c 'bazel build @ic-icrc1-ledger-canister//:ic-icrc1-ledger.wasm.gz && bazel build @ic-icrc1-ledger-candid//:ledger.did && mkdir -p canisters candid && cp $(bazel info output_base)/external/ic-icrc1-ledger-canister/ic-icrc1-ledger.wasm.gz canisters/nicp_ledger.wasm.gz && cp $(bazel info output_base)/external/ic-icrc1-ledger-candid/ledger.did candid/nicp_ledger.did'",
      "candid": "candid/nicp_ledger.did",
      "wasm": "canisters/nicp_ledger.wasm.gz"
    },
    "governance": {
      "type": "custom",
      "build": "sh -c 'bazel build @governance-canister//:governance-canister.wasm.gz && bazel build @governance-candid//:governance.did && mkdir -p canisters candid && cp $(bazel info output_base)/external/governance-canister/governance-canister.wasm.gz canisters/ && cp $(bazel info output_base)/external/governance-candid/governance.did candid/'",
      "candid": "candid/governance.did",
      "wasm": "canisters/governance-canister.wasm.gz"
    },
    "icp_ledger": {
      "type": "custom",
      "build": "sh -c 'bazel build @ledger-canister//:ledger-canister.wasm.gz && bazel build @ledger-candid//:ledger.did && mkdir -p canisters candid && cp $(bazel info output_base)/external/ledger-canister/ledger-canister.wasm.gz canisters/ && cp $(bazel info output_base)/external/ledger-candid/ledger.did candid/icp_ledger.did'",
      "candid": "candid/icp_ledger.did",
      "wasm": "canisters/ledger-canister.wasm.gz"
    },
    "nicp_index": {
      "type": "custom",
      "build": "sh -c 'bazel build @ic-icrc1-index-ng-canister//:ic-icrc1-index-ng.wasm.gz && bazel build @ic-icrc1-index-ng-candid//:index-ng.did && mkdir -p canisters candid && cp $(bazel info output_base)/external/ic-icrc1-index-ng-canister/ic-icrc1-index-ng.wasm.gz canisters/ && cp $(bazel info output_base)/external/ic-icrc1-index-ng-candid/index-ng.did candid/'",
      "candid": "candid/index-ng.did",
      "wasm": "canisters/ic-icrc1-index-ng.wasm.gz"
    }
  },
  "defaults": {
    "build": {
      "args": "",
      "packtool": ""
    }
  },
  "networks": {
    "local": {
      "bind": "127.0.0.1:8000",
      "type": "ephemeral"
    }
  },
  "version": 1
}
